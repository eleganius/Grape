<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.app.dao.CommentDao">

	<resultMap id="comment" type="com.example.app.domain.Comment">
		<id property="id" column="id" />
		<result property="articleId" column="article_id" />
		<result property="body" column="body" />
		<result property="createdAt" column="created_at" />
		<result property="commentCount" column="comment_count" />
		<association property="user" column="comment_user_id"
			javaType="com.example.app.domain.User">
			<id property="id" column="comment_user_id" />
			<result property="avatar" column="avatar" />
			<result property="name" column="name" />
			<result property="status" column="status" />
		</association>
	</resultMap>

	<select id="selectCommentById" resultMap="comment">
		SELECT
		comments.id,
		comments.body,
		comments.created_at,
		users.id AS comment_user_id,
		users.avatar,
		users.name,
		users.status,
		comment_counts.article_id,
		comment_counts.comment_count
		FROM comments
		JOIN users
		ON comments.user_id = users.id
		LEFT JOIN (SELECT article_id, COUNT(*) AS comment_count
		FROM comments GROUP BY article_id) AS comment_counts
		ON comments.article_id = comment_counts.article_id
		WHERE comments.id = #{id};
	</select>

	<select id="countCommentByArticleId" resultType="long">
		SELECT
		COUNT(*)
		FROM comments
		WHERE article_id = #{articleId}
	</select>

	<insert id="insert" parameterType="com.example.app.domain.Comment"
	useGeneratedKeys="true" keyProperty="id">
		INSERT INTO comments
		(user_id, article_id, body, created_at)
		VALUES
		(#{userId}, #{articleId}, #{body}, NOW())
	</insert>

	<delete id="deleteById" parameterType="int">
		DELETE FROM comments
		WHERE comments.id = #{commentId}
	</delete>

</mapper>